{"version":3,"sources":["constants/productConstatnts.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducer.js","reducers/orderReducers.js","actions/userActions.js","components/SearchBox.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","actions/productActions.js","components/Loader.js","components/Message.js","components/Paginate.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckOutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrdersListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","success","orderCreate","order","orderDetails","orderItems","orderPay","myOrdersList","orders","userList","users","userDelete","userUpdated","productDelete","productCreate","productUpdate","orderList","orderDeliver","productReviewCreate","productTopRated","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","className","Control","placeholder","name","onChange","target","value","variant","Header","useDispatch","useSelector","Navbar","style","boxShadow","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numOfReviews","price","listProducts","pageNumber","response","message","listProductDetails","Loader","Spinner","animation","role","width","height","margin","display","Message","children","Alert","defaultProps","Paginate","Pagination","Array","keys","currentPage","active","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","match","params","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","successProductReview","loadingProductReview","errorProductReview","ListGroup","numReviews","countInStock","Button","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","quantity","setItem","stringify","CartScreen","props","location","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","listMyOrders","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckOutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPaypalScript","clientId","script","document","createElement","async","onload","body","appendChild","getOrderDetails","window","paypal","href","amount","onSuccess","paymentResult","payOrder","textAlign","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updatedUser","ProductListScreen","loadingDelete","errorDelete","createdProduct","loadingCreate","errorCreate","successCreate","productCreated","deleteProduct","tPRODUCT_CREATE_REQUESTayload","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","console","log","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.1cba3d6d.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST';\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS';\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST';\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS';\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST';\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS';\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST';\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS';\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST';\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS';\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productsTopRatedReducer } from './reducers/productReducers.js'\r\nimport { cartReducer } from './reducers/cartReducers.js'\r\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducer.js'\r\nimport { orderCreateReducer, orderDetailsReducer, orderDeliverReducer, orderPayReducer, myOrdersListReducer, ordersListReducer } from './reducers/orderReducers.js'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,                /// state of all the products\r\n    productDetails: productDetailsReducer,          /// state of each product details\r\n    cart: cartReducer,                              /// state of the cart items\r\n    userLogin: userLoginReducer,                    /// state of the user Info\r\n    userRegister: userRegisterReducer,              /// state of the register \r\n    userDetails: userDetailsReducer,                /// state of the current user details\r\n    userUpdateProfile: userUpdateProfileReducer,    /// state of the profile\r\n    orderCreate: orderCreateReducer,                /// state of the order\r\n    orderDetails: orderDetailsReducer,              /// state of details order's\r\n    orderPay: orderPayReducer,                      /// state of the pay\r\n    myOrdersList: myOrdersListReducer,              /// state of my orders\r\n    userList: userListReducer,                      /// state of all the usersList\r\n    userDelete: userDeleteReducer,                  /// state of delete user\r\n    userUpdated: userUpdateReducer,                 /// state of updated user\r\n    productDelete: productDeleteReducer,            /// state of deleted product\r\n    productCreate: productCreateReducer,            /// state of created product\r\n    productUpdate: productUpdateReducer,            /// state of updated product\r\n    orderList: ordersListReducer,                   /// state of all orders\r\n    orderDeliver: orderDeliverReducer,              /// state if the order deliver\r\n    productReviewCreate: productReviewCreateReducer,/// state of review created\r\n    productTopRated: productsTopRatedReducer        /// state of top products\r\n}) /// מחבר את כל הרדיוסרים שלי על מנת ליצור חנות\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\nconst initialState = {\r\n    cart: { cartItems: cartItemsFromStorage, shippingAddress: shippingAddressFromStorage, paymentMethod: {} },\r\n    userLogin: { userInfo: userInfoFromStorage }\r\n}  /// יוצר סטייט התחלתי שהוא ריק בהתחלה,חוץ מסטייט של העגלה שלי שאותו אני רוצה למלאות במה שהמשתמש שם על מנת שיהיה לי בלוקל סטוראג'\r\nconst middleware = [thunk]    /// יוצר את תוכנת הביניים שלי\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))  ///  בונה את החנות בעזרת פקודה מובנת שמקבלת את כל הרדיוסרים כרדיוסר אחיד ואת הסטייט ההתחלתי ואת הטאנק\r\n\r\n\r\nexport default store;","import { PRODUCT_LIST_FAIL, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_REQUEST, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_RESET, PRODUCT_CREATE_FAIL, PRODUCT_CREATE_SUCCESS, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_RESET, PRODUCT_UPDATE_FAIL, PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL, PRODUCT_CREATE_REVIEW_RESET, PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAIL } from \"../constants/productConstatnts\"\r\n////  פונקציית הרדיוסר מקבלת שתי משתנים: האחד סטייט התחלתי שאצלנו הוא ריק והשני הוא סוג הפעולה\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                pages: action.payload.pages,\r\n                page: action.payload.page\r\n            }\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productsTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload }\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}","import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants'\r\n\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload;\r\n            const existItem = state.cartItems.find(x => x.product == item.product);\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => x.product == existItem.product ? item : x)\r\n                }\r\n            }\r\n            else {\r\n                return {\r\n                    ...state.cartItems,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return { ...state, shippingAddress: action.payload }\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return { ...state, paymentMethod: action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import { USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_RESET, USER_DETAILS_RESET, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_LIST_RESET, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_UPDATE_RESET:\r\n            return { user: {} }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { ORDER_CREATE_FAIL, ORDER_CREATE_SUCCESS, ORDER_CREATE_REQUEST, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_RESET, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_RESET, ORDER_LIST_FAIL, ORDER_LIST_SUCCESS, ORDER_LIST_REQUEST, ORDER_DELIVER_RESET, ORDER_DELIVER_FAIL, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_REQUEST } from '../constants/orderConstants.js'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case ORDER_CREATE_REQUEST:\r\n            return { loading: true }\r\n        case ORDER_CREATE_SUCCESS:\r\n            return { loading: false, success: true, order: action.payload }\r\n        case ORDER_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return { loading: false, order: action.payload }\r\n        case ORDER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return { loading: true }\r\n        case ORDER_PAY_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case ORDER_PAY_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const myOrdersListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return { loading: true }\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return { loading: false, orders: action.payload }\r\n        case ORDER_LIST_MY_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case ORDER_LIST_MY_RESET:\r\n            return { orders: [] }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const ordersListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return { loading: true }\r\n        case ORDER_LIST_SUCCESS:\r\n            return { loading: false, orders: action.payload }\r\n        case ORDER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return { loading: true }\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case ORDER_DELIVER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_SUCCESS, USER_REGISTER_REQUEST, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_RESET, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_LIST_REQUEST, USER_LIST_FAIL, USER_LIST_SUCCESS, USER_LIST_RESET, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL } from \"../constants/userConstants\"\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants.js'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const { data } = await axios.post('/api/users/login', { email, password }, config)\r\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data })\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: 'Invalid email or password'\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo');\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET }) //// מאפס את הנתונים של המשתמש שלי שאני מתנתק\r\n    dispatch({ type: ORDER_LIST_MY_RESET }) /// מאפס את ההזמנות שלי כשאני מתנתק\r\n    dispatch({ type: USER_LIST_RESET })     /// כאשר מתנתקים רשימת היוזרים מתאפסת\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const { data } = await axios.post('/api/users', { name, email, password }, config)\r\n        dispatch({ type: USER_REGISTER_SUCCESS, payload: data })\r\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data })\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: 'Please fill the fields by the requirements!'\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n        const { userLogin: { userInfo } } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(`/api/users/${id}`, config)\r\n        dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: 'Please fill the fields by the requirements!'\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n        const { userLogin: { userInfo } } = getState();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.put(`/api/users/profile`, user, config)\r\n        dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data })\r\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data })\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: 'Please fill the fields by the requirements!'\r\n        })\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n        const { userLogin: { userInfo } } = getState();\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(`/api/users`, config)\r\n        dispatch({ type: USER_LIST_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_DELETE_REQUEST })\r\n        const { userLogin: { userInfo } } = getState();\r\n        const config = { headers: { Authorization: `Bearer ${userInfo.token}` } }\r\n        await axios.delete(`/api/users/${id}`, config)\r\n        dispatch({ type: USER_DELETE_SUCCESS })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL, payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = (updatedUser) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_UPDATE_REQUEST })\r\n        const { userLogin: { userInfo } } = getState();\r\n        const config = { headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${userInfo.token}` } }\r\n        const { data } = await axios.put(`/api/users/${updatedUser._id}`, updatedUser, config)\r\n        dispatch({ type: USER_UPDATE_SUCCESS })\r\n        dispatch({ type: USER_DETAILS_SUCCESS, payload: data })    /// update the state of the user we deal with\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL, payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Form } from 'react-bootstrap'\r\n\r\nconst SearchBox = ({ history }) => {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (keyword.trim()) {\r\n            history.push(`/search/${keyword}`)\r\n        } else {\r\n            history.push('/')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} inline=\"true\" className='inlineStyle'  >\r\n            <Form.Control className='search mr-sm-2 ml-sm-5' type='text' placeholder='Search Products' name='q' onChange={e => setKeyword(e.target.value)}>\r\n            </Form.Control>\r\n            <button className='inlineStyle' type='submit' variant='outline-success' className='p-2'>Search <i className=\"fas fa-search\"></i></button>\r\n\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { logout } from '../actions/userActions.js'\r\nimport SearchBox from './SearchBox.js'\r\n\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch()\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin;\r\n\r\n    const LogoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n    return (\r\n        <header>\r\n            <Navbar style={{ boxShadow: '0 10px 5px 2px rgba(0,0,0,0.25)' }} bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to=\"/\"><Navbar.Brand><i className='fas fa-futbol'></i> Footstar</Navbar.Brand></LinkContainer>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Route render={({ history }) => <SearchBox history={history} />} />\r\n                        <Nav className=\"ms-auto\">\r\n                            <LinkContainer to=\"/cart\" ><Nav.Link><i className=\"fas fa-shopping-cart\"> Cart</i> </Nav.Link></LinkContainer>\r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <NavDropdown.Item onClick={LogoutHandler} >Log Out</NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            ) :\r\n                                <LinkContainer to=\"/login\" ><Nav.Link><i className=\"fas fa-user\"> Sign In</i></Nav.Link></LinkContainer>}\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin' id='adminmenu'>\r\n                                    <LinkContainer to='/admin/userslist'>\r\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to='/admin/productlist'>\r\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to='/admin/orderlist'>\r\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                </NavDropdown>\r\n                            )}\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar >\r\n        </header >\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\n\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\"> Copyright &copy; Elad Gabay</Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i style={{ color: color }} className={value >= 1 ? 'fas fa-star' : value >= 0.5 ? 'fas fa-star-half-alt' : 'far fa-star'} />\r\n            </span>\r\n            <span>\r\n                <i style={{ color: color }} className={value >= 2 ? 'fas fa-star' : value >= 1.5 ? 'fas fa-star-half-alt' : 'far fa-star'} />\r\n            </span>\r\n            <span>\r\n                <i style={{ color: color }} className={value >= 3 ? 'fas fa-star' : value >= 2.5 ? 'fas fa-star-half-alt' : 'far fa-star'} />\r\n            </span>\r\n            <span>\r\n                <i style={{ color: color }} className={value >= 4 ? 'fas fa-star' : value >= 3.5 ? 'fas fa-star-half-alt' : 'far fa-star'} />\r\n            </span>\r\n            <span>\r\n                <i style={{ color: color }} className={value >= 5 ? 'fas fa-star' : value >= 4.5 ? 'fas fa-star-half-alt' : 'far fa-star'} />\r\n            </span>\r\n            &nbsp;&nbsp;   &nbsp;  <span>{text} </span>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport Rating from './Rating'\r\n\r\nconst Product = ({ product }) => {\r\n    return (\r\n        <Card className='my-3 p-3 rounded'>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} variant='top' />\r\n            </Link>\r\n            <Card.Body >\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as='div'><strong>{product.name}</strong> </Card.Title>\r\n                </Link>\r\n                <Card.Text as='div'>\r\n                    <Rating color='#0F044C' value={product.rating} text={`${product.numOfReviews} reviews`} />\r\n                </Card.Text>\r\n                <Card.Text as='h3'>\r\n                    ${product.price}\r\n                </Card.Text>\r\n            </Card.Body>\r\n\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import { PRODUCT_LIST_FAIL, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_REQUEST, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_REQUEST, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_FAIL, PRODUCT_CREATE_SUCCESS, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_FAIL, PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL, PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAIL } from '../constants/productConstatnts'\r\nimport axios from 'axios'\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '') => async (dispatch) => {\r\n\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n        const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`)\r\n        dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        dispatch({ type: PRODUCT_LIST_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message })\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n        dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        dispatch({ type: PRODUCT_DETAILS_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DELETE_REQUEST })\r\n        const { userLogin: { userInfo } } = getState();\r\n        const config = { headers: { Authorization: `Bearer ${userInfo.token}` } }\r\n        await axios.delete(`/api/products/${id}`, config);\r\n        dispatch({ type: PRODUCT_DELETE_SUCCESS });\r\n    } catch (error) {\r\n        dispatch({ type: PRODUCT_DELETE_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message })\r\n    }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_CREATE_REQUEST })\r\n        const { userLogin: { userInfo } } = getState();\r\n        const config = { headers: { Authorization: `Bearer ${userInfo.token}` } }\r\n        const { data } = await axios.post(`/api/products`, {}, config);\r\n        dispatch({ type: PRODUCT_CREATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({ type: PRODUCT_CREATE_FAIL, tPRODUCT_CREATE_REQUESTayload: error.response && error.response.data.message ? error.response.data.message : error.message })\r\n    }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_UPDATE_REQUEST })\r\n        const { userLogin: { userInfo } } = getState();\r\n        const config = { headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${userInfo.token}` } }\r\n        const { data } = await axios.put(`/api/products/${product._id}`, product, config);\r\n        dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({ type: PRODUCT_UPDATE_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_CREATE_REVIEW_REQUEST })\r\n        const { userLogin: { userInfo } } = getState();\r\n        const config = { headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${userInfo.token}` } }\r\n        await axios.post(`/api/products/${productId}/reviews`, review, config);\r\n        dispatch({ type: PRODUCT_CREATE_REVIEW_SUCCESS });\r\n    } catch (error) {\r\n        dispatch({ type: PRODUCT_CREATE_REVIEW_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n        const { data } = await axios.get(`/api/products/top`)\r\n        dispatch({ type: PRODUCT_TOP_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        dispatch({ type: PRODUCT_TOP_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message })\r\n\r\n    }\r\n\r\n}","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner animation='border' role='status' style={{ width: '100px', height: '100px', margin: 'auto', display: 'block' }}>\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\nMessage.defaultProps = { variant: 'info' }\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\r\n    return (\r\n        pages > 1 && (\r\n            <Pagination>\r\n                {[...Array(pages).keys()].map((currentPage) => (\r\n                    <LinkContainer\r\n                        key={currentPage + 1}\r\n                        to={\r\n                            !isAdmin\r\n                                ? keyword\r\n                                    ? `/search/${keyword}/page/${currentPage + 1}`\r\n                                    : `/page/${currentPage + 1}`\r\n                                : `/admin/productlist/${currentPage + 1}`\r\n                        }\r\n                    >\r\n                        <Pagination.Item active={currentPage + 1 === page}>{currentPage + 1}</Pagination.Item>\r\n                    </LinkContainer>\r\n                ))}\r\n            </Pagination>\r\n        )\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader.js'\r\nimport Message from './Message.js'\r\nimport { listTopProducts } from '../actions/productActions.js'\r\n\r\nconst ProductCarousel = () => {\r\n    const dispatch = useDispatch()\r\n    const productTopRated = useSelector(state => state.productTopRated);\r\n    const { products, loading, error } = productTopRated;\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n    return loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n        <Carousel pause='hover' className='bg-dark'>\r\n            {products.map(product => (\r\n                <Carousel.Item key={product._id}>\r\n                    <Link to={`/product/${product._id}`}>\r\n                        <Image src={product.image} alt={product.name} fluid></Image>\r\n                        <Carousel.Caption className='carousel-caption'>\r\n                            <h2>Our Top Kits:</h2>\r\n                            <h2>{product.name} (Only ${product.price})</h2>\r\n                        </Carousel.Caption>\r\n                    </Link>\r\n                </Carousel.Item>\r\n            ))}\r\n        </Carousel>\r\n    )\r\n\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <meta name='description' content={description}></meta>\r\n            <meta name='keywords' content={keywords}></meta>\r\n        </Helmet>\r\n    )\r\n}\r\nMeta.defaultProps = {\r\n    title: 'Welcome To Footshop',\r\n    description: 'We sell the best products for cheap',\r\n    keywords: 'sport,football,cheap kits'\r\n}\r\n\r\nexport default Meta\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom'\r\nimport Product from '../components/Product';\r\nimport { listProducts } from '../actions/productActions'\r\nimport Loader from '../components/Loader.js'\r\nimport Message from '../components/Message.js'\r\nimport Paginate from '../components/Paginate.js'\r\nimport ProductCarousel from '../components/ProductCarousel.js'\r\nimport Meta from '../components/Meta'\r\n\r\nconst HomeScreen = ({ match }) => {\r\n    const keyword = match.params.keyword;\r\n    const pageNumber = match.params.pageNumber || 1;\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, page, pages } = productList;\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword, pageNumber))\r\n    }, [dispatch, keyword, pageNumber])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Meta />\r\n            {!keyword ? <ProductCarousel /> : <Link to='/' className='btn btn-light'>Go Back</Link>}\r\n            <h1>Latest Products</h1>\r\n            <h3>Select Your Next Kit <i className=\"fas fa-fire\"></i></h3>\r\n            {loading ? (\r\n                <Loader />)\r\n                : error ? (\r\n                    <Message variant='danger'>{error}</Message>)\r\n                    : (<>\r\n                        <Row> {products.map((product) => (\r\n                            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                <Product product={product} />\r\n                            </Col>\r\n                        ))} </Row>\r\n                        <Paginate pages={pages} keyword={keyword ? keyword : ''} page={page} />\r\n                    </>)}\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Meta from '../components/Meta'\r\nimport {\r\n    listProductDetails,\r\n    createProductReview,\r\n} from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstatnts'\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector((state) => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector((state) => state.productReviewCreate)\r\n    const {\r\n        success: successProductReview,\r\n        loading: loadingProductReview,\r\n        error: errorProductReview,\r\n    } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            setRating(0)\r\n            setComment('')\r\n        }\r\n        if (!product._id || product._id !== match.params.id) {\r\n            dispatch(listProductDetails(match.params.id))\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(\r\n            createProductReview(match.params.id, {\r\n                rating,\r\n                comment,\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link className='btn btn-light my-3' to='/'>\r\n                Go Back\r\n            </Link>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant='danger'>{error}</Message>\r\n            ) : (\r\n                <>\r\n                    <Meta title={product.name} />\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <Image src={product.image} alt={product.name} fluid />\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h3>{product.name}</h3>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Rating\r\n                                        value={product.rating}\r\n                                        text={`${product.numReviews} reviews`}\r\n                                    />\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    Description: {product.description}\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <Card>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Price:</Col>\r\n                                            <Col>\r\n                                                <strong>${product.price}</strong>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Status:</Col>\r\n                                            <Col>\r\n                                                {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    {product.countInStock > 0 && (\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>Qty</Col>\r\n                                                <Col>\r\n                                                    <Form.Control\r\n                                                        as='select'\r\n                                                        value={qty}\r\n                                                        onChange={(e) => setQty(e.target.value)}\r\n                                                    >\r\n                                                        {[...Array(product.countInStock).keys()].map(\r\n                                                            (x) => (\r\n                                                                <option key={x + 1} value={x + 1}>\r\n                                                                    {x + 1}\r\n                                                                </option>\r\n                                                            )\r\n                                                        )}\r\n                                                    </Form.Control>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                            onClick={addToCartHandler}\r\n                                            className='btn-block'\r\n                                            type='button'\r\n                                            disabled={product.countInStock === 0}\r\n                                        >\r\n                                            Add To Cart\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <h2>Reviews</h2>\r\n                            {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n                            <ListGroup variant='flush'>\r\n                                {product.reviews.map((review) => (\r\n                                    <ListGroup.Item key={review._id}>\r\n                                        <strong>{review.name}</strong>\r\n                                        <Rating value={review.rating} />\r\n                                        <p>{review.createdAt.substring(0, 10)}</p>\r\n                                        <p>{review.comment}</p>\r\n                                    </ListGroup.Item>\r\n                                ))}\r\n                                <ListGroup.Item>\r\n                                    <h2>Write a Customer Review</h2>\r\n                                    {successProductReview && (\r\n                                        <Message variant='success'>\r\n                                            Review submitted successfully\r\n                                        </Message>\r\n                                    )}\r\n                                    {loadingProductReview && <Loader />}\r\n                                    {errorProductReview && (\r\n                                        <Message variant='danger'>This User Already comment here!</Message>\r\n                                    )}\r\n                                    {userInfo ? (\r\n                                        <Form onSubmit={submitHandler}>\r\n                                            <Form.Group controlId='rating'>\r\n                                                <Form.Label>Rating</Form.Label>\r\n                                                <Form.Control\r\n                                                    as='select'\r\n                                                    value={rating}\r\n                                                    onChange={(e) => setRating(e.target.value)}\r\n                                                >\r\n                                                    <option value=''>Select...</option>\r\n                                                    <option value='1'>1 - Poor</option>\r\n                                                    <option value='2'>2 - Fair</option>\r\n                                                    <option value='3'>3 - Good</option>\r\n                                                    <option value='4'>4 - Very Good</option>\r\n                                                    <option value='5'>5 - Excellent</option>\r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId='comment'>\r\n                                                <Form.Label>Comment</Form.Label>\r\n                                                <Form.Control\r\n                                                    as='textarea'\r\n                                                    row='3'\r\n                                                    value={comment}\r\n                                                    onChange={(e) => setComment(e.target.value)}\r\n                                                ></Form.Control>\r\n                                            </Form.Group>\r\n                                            <Button\r\n                                                disabled={loadingProductReview}\r\n                                                type='submit'\r\n                                                variant='primary'\r\n                                            >\r\n                                                Submit\r\n                                            </Button>\r\n                                        </Form>\r\n                                    ) : (\r\n                                        <Message>\r\n                                            Please <Link to='/login'>sign in</Link> to write a review{' '}\r\n                                        </Message>\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants'\r\n\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            quantity: qty\r\n        }\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({ type: CART_SAVE_SHIPPING_ADDRESS, payload: data })\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({ type: CART_SAVE_PAYMENT_METHOD, payload: data })\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nconst CartScreen = (props) => {\r\n    const productId = props.match.params.id;\r\n    const qty = props.location.search ? Number(props.location.search.split('=')[1]) : 1;\r\n    const dispatch = useDispatch();\r\n    const cart = useSelector(state => state.cart);\r\n    const { cartItems } = cart;\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n    const checkOutHandler = () => {\r\n        props.history.push('/login?redirect=shipping')         //// אם אתה מחובר זה ישלח אותך לשיפינג ואם לא זה ישלח אותך להתחבר\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1> {cartItems.length === 0 ? <Message>Your cart is empty<Link to=\"/\"> Go Back</Link></Message> : (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map(item => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        ${item.price}\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Form.Control as='select' value={item.quantity} onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))} >\r\n                                            {[...Array(item.countInStock).keys()].map((x) => (\r\n                                                <option key={x + 1} value={x + 1}>{x + 1}</option>\r\n                                            ))}\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Button type=\"button\" variant=\"light\" onClick={() => removeFromCartHandler(item.product)}> <i className=\"fas fa-trash\" ></i></Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>))}\r\n                    </ListGroup>\r\n                )}</Col>\r\n            <Col md={2}>\r\n                <Card>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.quantity, 0)}) items </h2>\r\n                            ${cartItems.reduce((acc, item) => acc + item.quantity * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button type=\"button\" className='btn-block' disabled={cartItems.length === 0} onClick={checkOutHandler}>Proceed To Checkout</Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n\r\n        </Row >\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\n\r\nconst FormContainer = ({ children }) => {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message.js'\r\nimport Loader from '../components/Loader.js'\r\nimport FormContainer from '../components/FormContainer.js'\r\nimport { login } from '../actions/userActions'\r\n\r\nfunction LoginScreen({ location, history }) {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const redirect = location.search ? location.search.split('=')[1] : '/';\r\n    const dispatch = useDispatch();\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { loading, error, userInfo } = userLogin;\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {   /// בודקים אם ישר פרטים ביוזר אינפו, כלומר כאשר מישהו מתחבר פרטיו נשמרים ביוזר אינפו אם הוא לא הצליח להתחבר היוזר אינפו יהיה ריק \r\n            history.push(redirect);\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(login(email, password))\r\n\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler} >\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address:</Form.Label>\r\n                    <Form.Control type='email' placeholder='Enter Email' onChange={e => setEmail(e.target.value)} value={email}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password:</Form.Label>\r\n                    <Form.Control type='password' placeholder='Enter Password' onChange={e => setPassword(e.target.value)} value={password}></Form.Control>\r\n                </Form.Group><br></br>\r\n                <Button type=\"submit\" variant='primary'>Sign In</Button>\r\n            </Form>\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>Register</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message.js'\r\nimport Loader from '../components/Loader.js'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n    const [name, setName] = useState(\"\")\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [message, setMessage] = useState(null)\r\n    const redirect = location.search ? location.search.split('=')[1] : '/';\r\n    const dispatch = useDispatch();\r\n    const userRegister = useSelector(state => state.userRegister);\r\n    const { loading, error, userInfo } = userRegister;\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {   /// בודקים אם ישר פרטים ביוזר אינפו, כלומר כאשר מישהו מתחבר פרטיו נשמרים ביוזר אינפו אם הוא לא הצליח להתחבר היוזר אינפו יהיה ריק \r\n            history.push(redirect);\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match!')\r\n        }\r\n        else {\r\n            dispatch(register(name, email, password));\r\n        }\r\n\r\n\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler} >\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name:</Form.Label>\r\n                    <Form.Control type='name' placeholder='Enter Name' onChange={e => setName(e.target.value)} value={name}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address:</Form.Label>\r\n                    <Form.Control type='email' placeholder='Enter Email' onChange={e => setEmail(e.target.value)} value={email}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password:</Form.Label>\r\n                    <Form.Control type='password' placeholder='Enter Password' onChange={e => setPassword(e.target.value)} value={password}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password:</Form.Label>\r\n                    <Form.Control type='password' placeholder='Enter Confirm Password' onChange={e => setConfirmPassword(e.target.value)} value={confirmPassword}></Form.Control>\r\n                </Form.Group>\r\n                <Button type=\"submit\" variant='primary'>Register <i className='fas fa-user-plus'></i></Button>\r\n            </Form>\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an Account? <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Login</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message.js'\r\nimport Loader from '../components/Loader.js'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants.js'\r\nimport { myOrdersList } from '../actions/orderActions.js'\r\n\r\nfunction ProfileScreen({ history }) {\r\n    const [name, setName] = useState(\"\")\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [message, setMessage] = useState(null)\r\n    const dispatch = useDispatch();\r\n    const listMyOrders = useSelector(state => state.myOrdersList);\r\n    const { loading: loadingOrders, error: errorOrders, orders } = listMyOrders;\r\n\r\n    const userDetails = useSelector(state => state.userDetails);\r\n    const { loading, error, user } = userDetails;\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile);\r\n    const { success } = userUpdateProfile;\r\n\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {   /// בודקים אם ישר פרטים ביוזר אינפו, כלומר כאשר מישהו מתחבר פרטיו נשמרים ביוזר אינפו אם הוא לא הצליח להתחבר היוזר אינפו יהיה ריק \r\n            history.push('/login');\r\n        } else {\r\n            if (!user.name || !user.name || success) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(myOrdersList());\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match!')\r\n        }\r\n        else {\r\n            dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n        }\r\n\r\n\r\n    }\r\n    return (<Row>\r\n        <Col md={3}>\r\n            <h2>Update User Profile</h2>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {success && <Message variant='success'>Profile Updated Successfully</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler} >\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name:</Form.Label>\r\n                    <Form.Control type='name' placeholder='Enter Name' onChange={e => setName(e.target.value)} value={name}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address:</Form.Label>\r\n                    <Form.Control type='email' placeholder='Enter Email' onChange={e => setEmail(e.target.value)} value={email}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password:</Form.Label>\r\n                    <Form.Control type='password' placeholder='Enter Password' onChange={e => setPassword(e.target.value)} value={password}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password:</Form.Label>\r\n                    <Form.Control type='password' placeholder='Enter Confirm Password' onChange={e => setConfirmPassword(e.target.value)} value={confirmPassword}></Form.Control>\r\n                </Form.Group>\r\n                <Button type=\"submit\" variant='primary'>Update <i className='fas fa-edit'></i></Button>\r\n            </Form>\r\n        </Col>\r\n        <Col md={9}>\r\n            <h2>My Orders</h2>\r\n            {loadingOrders ? <Loader /> : errorOrders ? <Message variant='danger'>{errorOrders}</Message> : (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>DATE</th>\r\n                            <th>TOTAL</th>\r\n                            <th>PAID AT</th>\r\n                            <th>DELIVERED</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders.map(order => (\r\n                            <tr key={order._id}>\r\n                                <td> {order._id} </td>\r\n                                <td> {order.createdAt.substring(0, 10)} </td>\r\n                                <td> {order.totalPrice}$ </td>\r\n                                <td> {order.isPaid ? order.paidAt.substring(0, 10) : <i className='fas fa-times' style={{ color: 'red' }}></i>} </td>\r\n                                <td> {order.isDelivered ? order.deliveredAt.substring(0, 10) : (<i className='fas fa-times' style={{ color: 'red' }}></i>)} </td>\r\n                                <td><LinkContainer to={`/orders/${order._id}`}><Button variant='light'>Details</Button></LinkContainer></td>\r\n\r\n\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </Col>\r\n    </Row>\r\n\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n\r\n\r\n","import { ORDER_CREATE_FAIL, ORDER_CREATE_SUCCESS, ORDER_CREATE_REQUEST, ORDER_DETAILS_REQUEST, ORDER_DETAILS_FAIL, ORDER_DETAILS_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_SUCCESS, ORDER_PAY_REQUEST, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL, ORDER_LIST_REQUEST, ORDER_DELIVER_FAIL, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_REQUEST } from '../constants/orderConstants'\r\nimport axios from 'axios'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_CREATE_REQUEST })\r\n        const { userLogin: { userInfo } } = getState();\r\n        const config = {\r\n            headers: {\r\n                'content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.post(`/api/orders`, order, config);\r\n        dispatch({ type: ORDER_CREATE_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        dispatch({ type: ORDER_CREATE_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (orderId) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_DETAILS_REQUEST })\r\n        const { userLogin: { userInfo } } = getState();\r\n        const config = { headers: { Authorization: `Bearer ${userInfo.token}` } };\r\n        const { data } = await axios.get(`/api/orders/${orderId}`, config)\r\n        dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        dispatch({ type: ORDER_DETAILS_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message })\r\n    }\r\n}\r\n\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_PAY_REQUEST })\r\n        const { userLogin: { userInfo } } = getState();\r\n        const config = { headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${userInfo.token}` } };\r\n        const { data } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config)\r\n        dispatch({ type: ORDER_PAY_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        dispatch({ type: ORDER_PAY_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message })\r\n    }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_DELIVER_REQUEST })\r\n        const { userLogin: { userInfo } } = getState();\r\n        const config = { headers: { Authorization: `Bearer ${userInfo.token}` } };\r\n        const { data } = await axios.put(`/api/orders/${order._id}/deliver`, {}, config)\r\n        dispatch({ type: ORDER_DELIVER_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        dispatch({ type: ORDER_DELIVER_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message })\r\n    }\r\n}\r\n\r\n\r\nexport const myOrdersList = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_LIST_MY_REQUEST })\r\n        const { userLogin: { userInfo } } = getState();\r\n        const config = { headers: { Authorization: `Bearer ${userInfo.token}` } };\r\n        const { data } = await axios.get('/api/orders/myorders', config)\r\n        dispatch({ type: ORDER_LIST_MY_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        dispatch({ type: ORDER_LIST_MY_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message })\r\n    }\r\n}\r\n\r\nexport const listOrder = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_LIST_REQUEST })\r\n        const { userLogin: { userInfo } } = getState();\r\n        const config = { headers: { Authorization: `Bearer ${userInfo.token}` } };\r\n        const { data } = await axios.get('/api/orders', config)\r\n        dispatch({ type: ORDER_LIST_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        dispatch({ type: ORDER_LIST_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message })\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst CheckOutSteps = ({ step1, step2, step3, step4 }) => {\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Sign In</Nav.Link>\r\n                    </LinkContainer>\r\n                ) :\r\n                    <Nav.Link disabled>Sign In</Nav.Link>}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) :\r\n                    <Nav.Link disabled>Shipping</Nav.Link>}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) :\r\n                    <Nav.Link disabled>Payment</Nav.Link>}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) :\r\n                    <Nav.Link disabled>Place Order</Nav.Link>}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckOutSteps\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckOutSteps from '../components/CheckOutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nfunction ShippingScreen({ history }) {\r\n    const cart = useSelector(state => state.cart)\r\n    const dispatch = useDispatch();\r\n    const { shippingAddress } = cart;\r\n    const [address, setAddress] = useState(shippingAddress.address);\r\n    const [city, setCity] = useState(shippingAddress.city);\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n    const [country, setCountry] = useState(shippingAddress.country);\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckOutSteps step1 step2 />\r\n            <h1>Shipping <i className=\"fas fa-shipping-fast\"></i></h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address:</Form.Label>\r\n                    <Form.Control required type='text' placeholder='Enter Your Address' value={address} onChange={e => setAddress(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City:</Form.Label>\r\n                    <Form.Control required type='text' placeholder='Enter Your city' value={city} onChange={e => setCity(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code:</Form.Label>\r\n                    <Form.Control required type='text' placeholder='Enter Your Postal Code' value={postalCode} onChange={e => setPostalCode(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country:</Form.Label>\r\n                    <Form.Control required type='text' placeholder='Enter Your Country' value={country} onChange={e => setCountry(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>Continue</Button>\r\n            </Form>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckOutSteps from '../components/CheckOutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nfunction PaymentScreen({ history }) {\r\n    const cart = useSelector(state => state.cart)\r\n    const dispatch = useDispatch();\r\n    const { shippingAddress } = cart;\r\n    if (!shippingAddress) {\r\n        history.push('/shipping')\r\n    }\r\n    const [paymentMethod, setPaymentMethod] = useState('Paypal');\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod({ paymentMethod }))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckOutSteps step1 step2 step3 />\r\n            <h1>Payment Method<i className='fas fa-money-check-alt'></i></h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method:</Form.Label>\r\n                    <Col>\r\n                        <Form.Check type='radio' label='Paypal or Credit Card' id='Paypal' name='paymentMethod' value='Paypal' checked onChange={e => setPaymentMethod(e.target.value)}></Form.Check>\r\n\r\n                    </Col>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>Continue</Button>\r\n            </Form>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { Button, Row, Col, Image, Card, ListGroup } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport Message from '../components/Message.js'\r\nimport CheckoutSteps from '../components/CheckOutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num * 100) / 100).toFixed(2);\r\n    }\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state => state.cart);\r\n    const orderCreate = useSelector(state => state.orderCreate);\r\n    const { order, success, error } = orderCreate;\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/orders/${order._id}`)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [history, success])\r\n\r\n    ///Calculate prices\r\n    cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0))\r\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100);\r\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n    const placeOrderHandler = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Address: </strong>\r\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\r\n                                {cart.shippingAddress.postalCode},{' '}{cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <strong>Method: </strong>\r\n                            {cart.paymentMethod.paymentMethod}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Review Order:</h2>\r\n                            {cart.cartItems.length === 0 ? <Message>Your cart is empty</Message> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.quantity} x ${item.price} = ${item.quantity * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button type='button' className=\"btn-block\" disabled={cart.cartItems === 0} onClick={placeOrderHandler}>Place Order</Button>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { Button, Row, Col, Image, Card, ListGroup } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport Message from '../components/Message.js'\r\nimport Loader from '../components/Loader.js'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants.js'\r\n\r\nfunction OrderScreen({ match, history }) {\r\n    const orderId = match.params.id;\r\n    const dispatch = useDispatch()\r\n    const orderDetails = useSelector((state) => state.orderDetails);\r\n    const { order, error, loading } = orderDetails;\r\n\r\n    const [sdkReady, setSdkReady] = useState(false);\r\n    const orderPay = useSelector((state) => state.orderPay);\r\n    const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n    const orderDeliver = useSelector((state) => state.orderDeliver);\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n    ///calculate prices if loading finished\r\n    if (!loading) {\r\n        const addDecimails = (num) => {\r\n            return (Math.round(num * 100) / 100).toFixed(2)\r\n        }\r\n        order.itemsPrice = addDecimails(\r\n            order.orderItems.reduce((acc, item) => acc + item.price * item.quantity, 0)\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n        const addPaypalScript = async () => {\r\n            const { data: clientId } = await axios.get('/api/config/paypal');\r\n            const script = document.createElement('script')\r\n            script.type = 'text/javascript'\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.async = true\r\n            script.onload = () => { setSdkReady(true) }\r\n            document.body.appendChild(script)\r\n        }\r\n        if (!order || successPay || successDeliver) {\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPaypalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [successPay, orderId, dispatch, order, successDeliver])\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order));\r\n    }\r\n\r\n\r\n\r\n    return loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> :\r\n        <>\r\n            <h1>Order {orderId}</h1>\r\n            <br></br>\r\n            {order.isPaid && order.isDelivered && <h2 style={{ color: 'green' }}>Order Completed <i className=\"fas fa-check-double\"></i></h2>}<br></br>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping:</h2>\r\n                            <strong>Name: </strong>{order.user.name} <br></br>\r\n                            <strong>Email: </strong> <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n                            <p>\r\n                                <strong>Address: </strong>\r\n                                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                                {order.shippingAddress.postalCode},{' '}{order.shippingAddress.country}\r\n                            </p>\r\n                            {order.isDelivered ? <Message variant='success'>Delivered On {order.deliveredAt} <i className=\"fas fa-check\"></i></Message> :\r\n                                <Message variant='danger'>Not Delivered! <i className=\"fas fa-times\"></i></Message>}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}</p>\r\n                            {order.isPaid ? <Message variant='success'>Paid On {order.paidAt} <i className=\"fas fa-check\"></i></Message> :\r\n                                <Message variant='danger'>Not Paid! <i className=\"fas fa-times\"></i></Message>}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Review Order:</h2>\r\n                            {order.orderItems.length === 0 ? <Message>Your order is empty</Message> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {order.orderItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.quantity} x ${item.price} = ${item.quantity * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader />}\r\n                                    {!sdkReady ? (\r\n                                        <Loader />) : (\r\n                                        <PayPalButton amount={order.totalPrice} onSuccess={successPaymentHandler} />\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            )}\r\n                            {loadingDeliver && <Loader />}\r\n                            {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                <ListGroup.Item style={{ textAlign: 'center' }}>\r\n                                    <Button type='button' variant=\"info\" onClick={deliverHandler}>Mark As Delivered <i className=\"fas fa-check\"></i></Button>\r\n                                </ListGroup.Item>\r\n                            )}\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n\r\n\r\n}\r\n\r\nexport default OrderScreen\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Button, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nconst UserListScreen = ({ history }) => {\r\n    const userList = useSelector(state => state.userList);\r\n    const { error, loading, users } = userList;\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin;\r\n\r\n    const userDelete = useSelector(state => state.userDelete);\r\n    const { success: successDelete } = userDelete;\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure?')) {\r\n            dispatch(deleteUser(id));\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Users List</h1>\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> :\r\n                (\r\n                    <Table striped bordered hover responsive className='table-sm'  >\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>NAME</th>\r\n                                <th>EMAIL</th>\r\n                                <th>IS ADMIN</th>\r\n                                <th>EDIT / DELETE</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {users.map(user => (\r\n                                <tr key={user._id}>\r\n                                    <td>{user._id}</td>\r\n                                    <td>{user.name}</td>\r\n                                    <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\r\n                                    <td>{user.isAdmin ? (<i className='fas fa-check' style={{ color: 'green' }}></i>) : (<i className='fas fa-times' style={{ color: 'red' }}></i>)}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                            <Button variant='light' className='btn-sm'><i className='fas fa-edit'></i></Button>\r\n                                        </LinkContainer>\r\n                                        <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}><i className='fas fa-trash'></i></Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n\r\n    const userId = match.params.id;\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch();\r\n    const userDetails = useSelector(state => state.userDetails);\r\n    const { loading, error, user } = userDetails;\r\n    const userUpdated = useSelector(state => state.userUpdated);\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdated;\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET });\r\n            history.push('/admin/userslist');\r\n        } else {\r\n            if (!user.name || user._id !== userId) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n    }, [user, userId, dispatch, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        dispatch(updateUser({ _id: userId, name, email, isAdmin }))\r\n        e.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n                Go Back <i className=\"fas fa-undo-alt\"></i>\r\n            </Link>\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                <h3>ID - {userId}</h3>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control type='name' value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='email'>\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type='email' value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='isAdmin'>\r\n                            <Form.Check type='checkbox' label='Is Admin?' checked={isAdmin} onChange={(e) => setIsAdmin(e.target.checked)}></Form.Check>\r\n                        </Form.Group> <br></br>\r\n                        <Button type='submit' variant='primary'>Update <i className=\"fas fa-user-edit\"></i></Button>\r\n\r\n                    </Form>\r\n                )}\r\n\r\n            </FormContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Button, Table, Row, Col, Image } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate.js'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstatnts'\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n    const pageNumber = match.params.pageNumber || 1;\r\n\r\n    const productList = useSelector(state => state.productList);\r\n    const { error, loading, products, page, pages } = productList;\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { success: successDelete, loading: loadingDelete, error: errorDelete } = productDelete;\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin;\r\n\r\n    const createdProduct = useSelector((state) => state.productCreate)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: productCreated } = createdProduct;\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${productCreated._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts('', pageNumber))\r\n        }\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, productCreated, pageNumber])\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure?')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct());\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products List</h1>\r\n                </Col>\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        Create Product <i className='fas fa-plus'></i>\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorCreate}</Message>}\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> :\r\n                (<>\r\n                    <Table striped bordered hover responsive className='table-sm'  >\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>NAME</th>\r\n                                <th>Image</th>\r\n                                <th>PRICE</th>\r\n                                <th>CATEGORY</th>\r\n                                <th>BRAND</th>\r\n                                <th>EDIT / DELETE</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {products.map(product => (\r\n                                <tr key={product._id}>\r\n                                    <td>{product._id}</td>\r\n                                    <td>{product.name}</td>\r\n                                    <td><Image alt={product.name} src={product.image} style={{ height: '30px' }}></Image></td>\r\n                                    <td>${product.price}</td>\r\n                                    <td>{product.category}</td>\r\n                                    <td>{product.brand}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                            <Button variant='light' className='btn-sm'><i className='fas fa-edit'></i></Button>\r\n                                        </LinkContainer>\r\n                                        <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}><i className='fas fa-trash'></i></Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                    <Paginate pages={pages} page={page} isAdmin={true} />\r\n                </>\r\n                )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstatnts'\r\n\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n\r\n    const productId = match.params.id;\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const productDetails = useSelector((state) => state.productDetails);\r\n    const { loading, error, product } = productDetails;\r\n    console.log(product)\r\n    const productUpdate = useSelector(state => state.productUpdate);\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = productUpdate;\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if (!product.name || product._id !== productId) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n            }\r\n        }\r\n    }, [product, productId, dispatch, history, successUpdate])\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0];           /// e.targets.files its array so we take the first file/ בכל מקרה יש רק תמונה אחת שמעלים\r\n        const formData = new FormData();\r\n        formData.append('image', file);\r\n        setUploading(true)\r\n        try {\r\n            const config = { headers: { 'Content-Type': 'multipart/form-data' } }        /// content type of image\r\n            const { data } = await axios.post('/api/upload', formData, config)\r\n            setImage(data);                   /// the data is the path we return in the backend so we set it into the image \r\n            setUploading(false);              /// when its finish we remove the loader in the render\r\n        } catch (error) {\r\n            console.error(error)\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n                Go Back <i className=\"fas fa-undo-alt\"></i>\r\n            </Link>\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                <h3>ID - {productId}</h3>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control type='name' value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='price'>\r\n                            <Form.Label>Price</Form.Label>\r\n                            <Form.Control type='number' value={price} onChange={(e) => setPrice(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='image'>\r\n                            <Form.Label>Image</Form.Label>\r\n                            <Form.Control type='text' value={image} onChange={(e) => setImage(e.target.value)}></Form.Control>\r\n                            <Form.File id='image-file' custom onChange={uploadFileHandler}></Form.File>\r\n                            {uploading && <Loader />}\r\n                        </Form.Group>\r\n                        <Form.Group controlId='brand'>\r\n                            <Form.Label>Brand</Form.Label>\r\n                            <Form.Control type='text' value={brand} onChange={(e) => setBrand(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='category'>\r\n                            <Form.Label>Category</Form.Label>\r\n                            <Form.Control type='text' value={category} onChange={(e) => setCategory(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='countInStock'>\r\n                            <Form.Label>Count In Stock</Form.Label>\r\n                            <Form.Control type='number' value={countInStock} onChange={(e) => setCountInStock(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='description'>\r\n                            <Form.Label>Description</Form.Label>\r\n                            <Form.Control type='text' value={description} onChange={(e) => setDescription(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                        <br></br>\r\n                        <Button type='submit' variant='primary'>Update <i className=\"fas fa-user-edit\"></i></Button>\r\n\r\n                    </Form>\r\n                )}\r\n\r\n            </FormContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Button, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listOrder } from '../actions/orderActions'\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n    const orderList = useSelector(state => state.orderList);\r\n    const { error, loading, orders } = orderList;\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin;\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrder())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h1>Orders List</h1>\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> :\r\n                (\r\n                    <Table striped bordered hover responsive className='table-sm'  >\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ORDER ID</th>\r\n                                <th>USER</th>\r\n                                <th>DATE</th>\r\n                                <th>TOTAL PRICE</th>\r\n                                <th>PAID</th>\r\n                                <th>DELIVERED</th>\r\n                                <th>DETAILS</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.user && order.user.name}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>${order.totalPrice}</td>\r\n                                    <td>{order.isPaid ? (\r\n                                        order.paidAt.substring(0, 10)) : (<i style={{ color: 'red' }} className='fas fa-times'></i>)\r\n                                    }</td>\r\n                                    <td style={{ textAlign: 'center' }}>{order.isDelivered ? (\r\n                                        order.deliveredAt.substring(0, 10)) : (<i style={{ color: 'red' }} className='fas fa-times'></i>)\r\n                                    }</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/orders/${order._id}`}>\r\n                                            <Button variant='light' className='btn-sm'>DETAILS <i className=\"fas fa-info-circle\"></i></Button>\r\n                                        </LinkContainer>\r\n\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen\r\n","import React from 'react'\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport { Container } from 'react-bootstrap'\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport OrderListScreen from './screens/OrdersListScreen';\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route exact path='/' component={HomeScreen} />\n          <Route exact path='/page/:pageNumber' component={HomeScreen} />\n          <Route exact path='/search/:keyword/page/:pageNumber' component={HomeScreen} />\n          <Route exact path='/search/:keyword' component={HomeScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path=\"/cart/:id?\" component={CartScreen} />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/orders/:id' component={OrderScreen} />\n          <Route path='/admin/userslist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n          <Route exact path='/admin/productlist' component={ProductListScreen} />\n          <Route exact path='/admin/productlist/:pageNumber' component={ProductListScreen} />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}